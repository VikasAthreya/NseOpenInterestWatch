using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Web.Mvc;
using HtmlAgilityPack;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using NseOpenInterestWatch.EntityFramework;

namespace NseOpenInterestWatch.Controllers
{
    public class HomeController : Controller
    {
//        private NseToolsContext dbContext;
//        public HomeController()
//        {
//            dbContext = new DbContext();
//        }
        public ActionResult Index()
        {
            return View();
        }

        [HttpPost]
        public JsonResult NewChart()
        {
            ScrapNseBankNiftyData();
            var model = GetNseBankNiftyData();
            var json = JsonConvert.SerializeObject(model);
            //Source data returned as JSON  
            return Json(model, JsonRequestBehavior.AllowGet);
        }



        public ActionResult About()
        {
            ViewBag.Message = "Your application description page.";

            return View();
        }

        public ActionResult Contact()
        {
            ViewBag.Message = "Your contact page.";

            return View();
        }

        private void ScrapNseBankNiftyData()
        {
            string[] bnfRange = ConfigurationManager.AppSettings["BNfStrikePriceRange"].Split(',');

            var web = new HtmlWeb();
            HtmlDocument doc =
                web.Load(
                    "https://www.nseindia.com/live_market/dynaContent/live_watch/option_chain/optionKeys.jsp?symbolCode=-9999&symbol=BANKNIFTY&symbol=BANKNIFTY&instrument=OPTIDX&date=-&segmentLink=17&segmentLink=17");

//            doc

            foreach (HtmlNode table in doc.DocumentNode.SelectNodes("//table"))
            {
                Console.WriteLine("Found: " + table.Id);
                if (table.Id == "octable")
                {
                    using (var context = new NseToolsContext())
                    {
                        var records = new List<BankNiftyOiHistory>();
                        foreach (HtmlNode row in table.SelectNodes("tr"))
                        {
                            Console.WriteLine("row");
                            string innerHtml = row.InnerHtml;
                            HtmlNodeCollection allCells = row.SelectNodes("td");
                            if (allCells.Count > 10 &&
                                !string.IsNullOrWhiteSpace(allCells[11].InnerText) &&
                                Convert.ToDecimal(allCells[11].InnerText) >= Convert.ToInt16(bnfRange[0]) &&
                                Convert.ToDecimal(allCells[11].InnerText) <= Convert.ToInt16(bnfRange[1]))
                            {
                                var record = new BankNiftyOiHistory();
                                //                        Chart
                                //                        OI	                         YES
                                record.CeOi = Convert.ToInt32(allCells[1].InnerText.Replace(",", ""));
                                //                        Chng in OI                         YES
                                record.CeChange = Convert.ToInt32(allCells[2].InnerText.Replace(",", ""));
                                //                        Volume
                                //                        IV
                                //                        LTP
                                //                        Net Chng	
                                //                        Bid Qty
                                //                        Bid Price	
                                //                        Ask Price	
                                //                        Ask Qty
                                //                        Strike Price                         YES
                                record.StrikePrice =
                                    Convert.ToInt32(Convert.ToDecimal(allCells[11].InnerText.Replace(",", "")));
                                //                        Bid Qty
                                //                        Bid Price
                                //                        Ask Price 
                                //                        Ask Qty 
                                //                        Net Chng
                                //                        LTP
                                //                        IV
                                //                        Volume
                                //                        Chng in OI                          YES
                                record.PeChange = Convert.ToInt32(allCells[20].InnerText.Replace(",", ""));
                                //                        OI                          YES
                                record.PeOi = Convert.ToInt32(allCells[21].InnerText.Replace(",", ""));
                                //                        Chart


                                record.ModifiedDateTime = DateTime.Now;
                                records.Add(record);

//                            innerHtml = innerHtml.Replace(",", "");
////                        string replacement = Regex.Replace(innerText, @"\t|\n|\r", ",");
//                            string replacement = Regex.Replace(innerHtml, @"\n", ",");
//                            var csvRow = replacement.Split(',');
//                            csvRow.ForEach(x => x = x.Trim());
//
//                            foreach (HtmlNode cell in row.SelectNodes("th|td"))
//                            {
//                                Console.WriteLine("cell: " + cell.InnerText);
//                            }
                            }
                        }

                        //add the row
                        context.BankNiftyOiHistories.AddRange(records);
                        context.SaveChanges();
                    }
                }
            }
        }

        private JObject GetNseBankNiftyData()
        {
            dynamic ce = new JObject();
            var final = new List<BankNiftyOiHistory>();
            using (var context = new NseToolsContext())
            {
                var result = context.BankNiftyOiHistories.GroupBy(x => x.StrikePrice).Select(grp => grp.ToList()).ToList();

//                var result1 = context.BankNiftyOiHistories.GroupBy(x => x.StrikePrice).Select(grp => grp.ToList()[0]).ToList();
//                foreach (var res in result)
//                {
////                    final.Add(new BankNiftyOiHistory
////                    {
////                        CeOi = res[0].CeOi,
////                        CeChange = res[0].CeChange,
////                        PeOi = res[0].PeOi,
////                        PeChange = res[0].PeChange,
////                        StrikePrice = res[0].StrikePrice,
////                        ModifiedDateTime = res[0].ModifiedDateTime
////                    });
//                    var sorted = res.OrderBy(x=>x.ModifiedDateTime);
//                    var allCes = sorted.Select(x => x.CeOi);
//                    var allPes = sorted.Select(x => x.PeOi);
//                    var allDateTime = sorted.Select(x => x.ModifiedDateTime);
//
//                    
//                    ce.allCes = allCes;
//                    ce.allPes = allPes;
//                    ce.allDateTime = allDateTime;
//
//                }
                var res = result.First();
                var sorted = res.OrderBy(x => x.ModifiedDateTime).ToList();
                var allCes = sorted.Select(x => x.CeOi).ToList();
                var allPes = sorted.Select(x => x.PeOi).ToList();
                var allDateTime = sorted.Select(x => x.ModifiedDateTime).ToList();


                ce.allCes = JsonConvert.SerializeObject(allCes);
                ce.allPes = JsonConvert.SerializeObject(allPes);
                ce.allDateTime = JsonConvert.SerializeObject(allDateTime);
                return ce;
            }
        }
    }
}